{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","description","src","alt","stats_item","label","quantity","followers","views","likes","defaultProps","defaultImage","colors","Statistics","title","statistics","stat_list","map","index","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","width","FriendList","friends","friend_list","friend_list_item","TransactionHistory","items","transaction_history","transaction_history_row","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0010c6f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2l08W\",\"description\":\"Profile_description__2bLe7\",\"avatar\":\"Profile_avatar__F6gGz\",\"name\":\"Profile_name__1EoIB\",\"tag\":\"Profile_tag__3qgXH\",\"location\":\"Profile_location__2kPTd\",\"stats\":\"Profile_stats__3pzBq\",\"stats_item\":\"Profile_stats_item__26nU9\",\"label\":\"Profile_label__1Wnxn\",\"quantity\":\"Profile_quantity__1mQde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1puor\",\"title\":\"Statistics_title__2Tehi\",\"stat_list\":\"Statistics_stat_list__3lxuq\",\"item\":\"Statistics_item__1nqRk\",\"label\":\"Statistics_label__3l96H\",\"percentage\":\"Statistics_percentage__2Iomq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__1ncTg\",\"status_online\":\"FriendListItem_status_online__l5t8L FriendListItem_status__1ncTg\",\"status_offline\":\"FriendListItem_status_offline__1GdE4 FriendListItem_status__1ncTg\",\"avatar\":\"FriendListItem_avatar__3p596\",\"name\":\"FriendListItem_name__oNHpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2yNV2\",\"transaction_history_row\":\"TransactionHistory_transaction_history_row__1oBSA\",\"even_row\":\"TransactionHistory_even_row__1T-Rr TransactionHistory_transaction_history_row__1oBSA\",\"odd_row\":\"TransactionHistory_odd_row__1Pc-f TransactionHistory_transaction_history_row__1oBSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__3K2tu\",\"friend_list_item\":\"FriendList_friend_list_item__1Y3Qn\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from \"prop-types\";\r\nimport defaultImage from \"../default.jpg\";\r\n\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>{tag}</p>\r\n        {location && <p className={styles.location}>{location}</p>}\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.stats_item}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.stats_item}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.stats_item}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nProfile.defaultProps = {\r\n  avatar: defaultImage,\r\n  location: \"\",\r\n};\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\nexport default Profile;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst colors = [\"#DEB887\", \"#F4A460\", \"#B8860B\", \"#8B4513\", \"#800000\"];\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.stat_list}>\r\n        {stats.map(({ id, label, percentage }, index) => (\r\n          <li\r\n            className={styles.item}\r\n            key={id}\r\n            style={{\r\n              backgroundColor: colors[index % 5],\r\n            }}\r\n          >\r\n            <span className={styles.label}>{label}</span>\r\n            <span className={styles.percentage}>{percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nStatistics.defaultProps = { title: \"\" };\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport defaultImage from \"../../default.jpg\";\r\nimport styles from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ isOnline, avatar, name }) => {\r\n  return (\r\n    <>\r\n      <span className={styles[isOnline ? \"status_online\" : \"status_offline\"]}>\r\n        {isOnline}\r\n      </span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar: defaultImage,\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default FriendListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem/FriendListItem\";\r\n\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friend_list}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => (\r\n        <li className={styles.friend_list_item} key={id}>\r\n          <FriendListItem isOnline={isOnline} name={name} avatar={avatar} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transaction_history}>\r\n      <thead>\r\n        <tr className={styles.transaction_history_row}>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(({ type, amount, currency, id }, index) => {\r\n          return (\r\n            <tr\r\n              key={id}\r\n              className={styles[index % 2 === 0 ? \"even_row\" : \"odd_row\"]}\r\n            >\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./user.json\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./transactions.json\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}